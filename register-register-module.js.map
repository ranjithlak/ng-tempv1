{"version":3,"sources":["webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.scss","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/register/register.module.ts","webpack:///./src/app/register/signup/signup.component.html","webpack:///./src/app/register/signup/signup.component.scss","webpack:///./src/app/register/signup/signup.component.ts"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["module.exports = \"\\n<mat-sidenav-container>\\n        <mat-sidenav #sidenav role=\\\"navigation\\\">\\n                <mat-nav-list>\\n                        <a mat-list-item routerLink=\\\"/signup\\\" (click)=\\\"sidenav.close()\\\">\\n                        <span class=\\\"nav-caption\\\">Signup</span></a>\\n                        <a mat-list-item routerLink=\\\"/login-list1\\\" (click)=\\\"sidenav.close()\\\">\\n                            <span class=\\\"nav-caption\\\"> Login</span></a>\\n                    </mat-nav-list>\\n        </mat-sidenav>\\n        <mat-sidenav-content>\\n            <mat-toolbar color=\\\"primary\\\">\\n                <div fxHide.gt-xs><button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\n                      <mat-icon >menu</mat-icon></button></div>\\n                <div>LOGO</div>\\n                <div fxFlex fxLayout fxLayoutAlign=\\\"flex-end\\\" fxHide.xs>\\n                    <ul fxLayout fxLayoutGap=\\\"20px\\\" class=\\\"navigation-items\\\">\\n                        <li> <a routerLink=\\\"/signup\\\">Signup</a></li>\\n                        <li><a routerLink=\\\"/login\\\">Login</a></li>\\n                    </ul>\\n                </div>\\n                  \\n               \\n            </mat-toolbar>\\n            <div>\\n              <router-outlet ></router-outlet>\\n            </div> \\n        </mat-sidenav-content>\\n    </mat-sidenav-container>\"","module.exports = \".full-width {\\n  width: 100%; }\\n\\n.redirect {\\n  font-size: 14px;\\n  margin-left: 10px;\\n  color: #00AAAA; }\\n\\n.tab11 {\\n  text-align: center;\\n  margin-left: 0px; }\\n\\nmat-sidenav-container, mat-sidenav-content, mat-sidenav {\\n  height: 100%; }\\n\\nmat-sidenav {\\n  width: 200px; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ObservableMedia, MediaChange } from '@angular/flex-layout';\n\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  ngOnInit() {\n    \n  }\n  \n   \n  \n    constructor() {\n      \n    }\n  }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterComponent } from './register.component';\nimport { RouterModule, Routes } from '@angular/router'; \nimport { MatToolbarModule, MatButtonModule, MatIconModule, MatTabsModule, MatSidenavModule, MatButtonToggleModule, MatInputModule, MatListModule } from '@angular/material';\n\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {MatCardModule} from '@angular/material/card';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SignupComponent } from './signup/signup.component';\n\n\n\n\n\nconst appRoutes: Routes = [\n   \n    { path:'signup',component:SignupComponent}\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(appRoutes),\n    MatToolbarModule,\n    MatCardModule,\n    CommonModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatInputModule,\n    MatToolbarModule,\n    FormsModule,\n    MatSidenavModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatListModule,\n    MatButtonModule,\n        MatIconModule,\n        MatTabsModule,\n        DragDropModule,\n        MatSidenavModule,\n        PerfectScrollbarModule,\n        MatCardModule,\n       \n      \n       \n        \n    \n  ],\n  declarations: [RegisterComponent, SignupComponent,]\n})\nexport class RegisterModule {}","module.exports = \"<div fxLayout=\\\"column\\\" fxFlexFill fxLayoutAlign=\\\"center center\\\">\\n\\n    <div fxLayout=\\\"column\\\" >\\n   \\n        <div class=\\\" mat-elevation-z4\\\">\\n            <mat-card>\\n                <mat-card-title class=\\\"tab11\\\">\\n                    Login\\n                </mat-card-title>\\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" >\\n                        <mat-form-field appearance=\\\"outline\\\">\\n                            <mat-label>UserName</mat-label>\\n                            <input matInput placeholder=\\\"Placeholder\\\">\\n                           \\n                          \\n                        </mat-form-field>\\n                        <mat-form-field appearance=\\\"outline\\\">\\n                            <mat-label>Password</mat-label>\\n                            \\n                            <input matInput placeholder=\\\"Placeholder\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\n                            <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                            \\n                        </mat-form-field>\\n                        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\"  (click)=\\\"login()\\\">log In</button>\\n                        \\n                    </form>\\n                </mat-card-content>\\n            </mat-card>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \".full-width {\\n  width: 100%; }\\n\\n.redirect {\\n  font-size: 14px;\\n  margin-left: 10px;\\n  color: #00AAAA; }\\n\\n.tab11 {\\n  text-align: center;\\n  margin-left: 0px; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  @ViewChild('sidenav')\n  userForm: FormGroup;\n  formErrors = {\n    'email': '',\n    'password': ''\n  };\n  validationMessages = {\n    'email': {\n      'required': 'Please enter your email',\n      'email': 'please enter your vaild email'\n    },\n    'password': {\n      'required': 'please enter your password',\n      'pattern': 'The password must contain numbers and letters',\n      'minlength': 'Please enter more than 4 characters',\n      'maxlength': 'Please enter less than 25 characters',\n    }\n  };\n\n  constructor(private router: Router,\n              private fb: FormBuilder) {\n  }\n\n  ngOnInit() {\n    this.buildForm();\n  }\n\n  buildForm() {\n    this.userForm = this.fb.group({\n      'email': ['', [\n        Validators.required,\n        Validators.email\n      ]\n      ],\n      'password': ['', [\n        Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\n        Validators.minLength(6),\n        Validators.maxLength(25)\n      ]\n      ],\n    });\n\n    this.userForm.valueChanges.subscribe(data => this.onValueChanged(data));\n    this.onValueChanged();\n  }\n\n  onValueChanged(data?: any) {\n    // if (!this.userForm) {\n    //   return;\n    // }\n    // const form = this.userForm;\n    // for (const field in this.formErrors) {\n    //   if (Object.prototype.hasOwnProperty.call(this.formErrors, field)) {\n    //     this.formErrors[field] = '';\n    //     const control = form.get(field);\n    //     if (control && control.dirty && !control.valid) {\n    //       const messages = this.validationMessages[field];\n    //       for (const key in control.errors) {\n    //         if (Object.prototype.hasOwnProperty.call(control.errors, key)) {\n    //           this.formErrors[field] += messages[key] + ' ';\n    //         }\n    //       }\n    //     }\n    //   }\n    // }\n  }\n  login() {\n    this.router.navigate(['/']);\n  }\n  onToggle(){\n\n  }\n}\n"],"sourceRoot":""}