{"version":3,"sources":["webpack:///./src/app/forms/forms.module.ts","webpack:///./src/app/forms/forms.router.ts","webpack:///./src/app/forms/reactive-forms/reactive-forms.component.html","webpack:///./src/app/forms/reactive-forms/reactive-forms.component.scss","webpack:///./src/app/forms/reactive-forms/reactive-forms.component.ts","webpack:///./src/app/forms/template-driven-forms/template-driven-forms.component.html","webpack:///./src/app/forms/template-driven-forms/template-driven-forms.component.scss","webpack:///./src/app/forms/template-driven-forms/template-driven-forms.component.ts","webpack:///./src/app/forms/template-driven-forms/user.ts"],"names":[],"mappings":"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","file":"forms-forms-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsRouterModule } from './forms.router';\nimport { ReactiveFormsComponent } from './reactive-forms/reactive-forms.component';\nimport { TemplateDrivenFormsComponent } from './template-driven-forms/template-driven-forms.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n\t\t\tMatButtonModule,\n\t\t\tMatToolbarModule,\n\t\t\tMatCardModule,\n\t\t\tMatTabsModule,\n\t\t\tMatIconModule,} from '@angular/material';\nimport { MatInputModule } from '@angular/material';\nimport {  ReactiveFormsModule } from '@angular/forms';\n\nimport { FormsModule }   from '@angular/forms';\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsRouterModule,\n\t\tFlexLayoutModule,\n\t\tMatButtonModule,\n\t\tMatToolbarModule,\n\t\tMatCardModule,\n\t\tMatTabsModule,\n\t\tMatIconModule,\n\t\t MatInputModule,\n\t\t ReactiveFormsModule,\n\t\t FormsModule\n\t],\n\tdeclarations: [ReactiveFormsComponent, TemplateDrivenFormsComponent]\n})\nexport class FormModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsComponent } from './reactive-forms/reactive-forms.component';\nimport { TemplateDrivenFormsComponent } from './template-driven-forms/template-driven-forms.component';\nconst FormsRoutes: Routes = [\n  \t{ path: 'reactive_forms', component: ReactiveFormsComponent },\n  \t{ path: 'template_forms', component: TemplateDrivenFormsComponent },\n  \t\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(FormsRoutes)\n  \t],\n  exports: [\n    RouterModule\n  ]\n})\nexport class FormsRouterModule {}","module.exports = \"<div fxLayout=\\\"column\\\"  class=\\\"components-container-gt-xs\\\"  [ngClass.xs]=\\\"'components-container-xs'\\\"  fxLayoutGap=\\\"20px\\\">\\n\\n\\t<div fxFlex class=\\\"form-component-holder mat-elevation-z4\\\">\\n\\t\\t<mat-toolbar class=\\\"form-header\\\">\\n\\t\\t\\t<h1 class=\\\"mat-headline center-align\\\" >Reactive Forms</h1>\\n\\t\\t</mat-toolbar>\\n\\t\\t    <div [hidden]=\\\"submitted\\\" fxLayout=\\\"column\\\"  class=\\\"widgetHolder-content\\\" fxLayoutAlign=\\\"space-around stretch\\\" style=\\\"background-color: white;\\\">\\n       \\n\\t\\t\\n        <form [formGroup]=\\\"profileForm\\\"  (ngSubmit)=\\\"onSubmit()\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" >\\n\\t\\t\\t<mat-form-field class=\\\"width\\\">\\n\\t\\t\\t\\t<input type=\\\"text\\\" matInput placeholder=\\\"Enter Username\\\"  formControlName=\\\"username\\\" required>\\n\\t\\t\\t\\n\\t\\t\\t</mat-form-field>\\n\\t\\t\\t<mat-error *ngIf=\\\"username.invalid&& (username.dirty || username.touched)\\\" align=\\\"end\\\" style=\\\"color: red;\\\" class=\\\"mat-body-1 center-align \\\"> \\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tName must be at least 6 characters long.\\n\\t\\t\\t\\t\\n\\t\\t\\t</mat-error>\\n\\n\\t\\t\\t\\n\\t\\t\\t<mat-form-field  class=\\\"width\\\">\\n\\t\\t\\t\\t<input type=\\\"email\\\" matInput placeholder=\\\"Enter Your Email\\\"  formControlName=\\\"email\\\"  required\\n                pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"  required >\\n\\t\\t\\t</mat-form-field>\\n\\t\\t\\t<mat-error *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\" align=\\\"end\\\" style=\\\"color: red;\\\" class=\\\"mat-body-1 center-align\\\" >\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tPlease enter valid email \\n\\t\\t\\t</mat-error>\\n\\t\\t\\t<mat-form-field  class=\\\"width\\\">\\n\\t\\t\\t\\t<input type=\\\"text\\\" matInput placeholder=\\\"Enter your Number\\\"  \\n\\t\\t\\t\\tformControlName=\\\"number\\\" required pattern=\\\"[0-9]*\\\">\\n\\t\\t\\t</mat-form-field>\\n\\t\\t\\t<mat-error *ngIf=\\\"number.hasError('minlength') && (number.dirty || number.touched)\\\" align=\\\"end\\\" style=\\\"color: red;\\\" class=\\\"mat-body-1 center-align\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tPlease enter valid number \\n\\t\\t\\t</mat-error>\\n\\n\\t\\t\\t<mat-form-field>\\n    \\t\\t\\t   <input matInput placeholder=\\\"Enter your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" formControlName=\\\"pwd\\\" >\\n    \\t\\t\\t   <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n    \\t\\t</mat-form-field>\\n\\t\\t\\t<button style=\\\"font-weight: bold;\\\" mat-raised-button type=\\\"submit\\\" *ngIf=\\\"username.valid && email.valid && number.valid\\\" class=\\\"mat-headline center-align\\\">Submit</button>\\n\\t\\t</form>\\n    </div>\\n    <div [hidden]=\\\"!submitted\\\" style=\\\"background-color: white;\\\">\\n\\t\\t<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around stretch\\\" >\\n\\t\\t\\t<h2 class=\\\"mat-headline center-align\\\">You submitted the following:</h2>\\n\\t\\t<div fxLayout=\\\"row\\\"  fxLayoutGap=\\\"20px\\\" class=\\\"mat-body center-align\\\">\\n\\t\\t\\t<div >Name</div>\\n\\t\\t\\t<div>{{ profileForm.value.username}}</div>\\n\\t\\t</div>\\n\\t\\t<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" class=\\\"mat-body center-align\\\">\\n\\t\\t\\t<div>Number</div>\\n\\t\\t\\t<div>{{profileForm.value.number }}</div>\\n\\t\\t</div>\\n\\t\\t<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\"  class=\\\"mat-body center-align\\\">\\n\\t\\t\\t<div >Password</div>\\n\\t\\t\\t<div>{{ profileForm.value.pwd}}</div>\\n\\t\\t</div>\\n\\t\\t<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" class=\\\"mat-body center-align\\\">\\n\\t\\t\\t<div >Email</div>\\n\\t\\t\\t<div>{{ profileForm.value.email}}</div>\\n\\t\\t</div>\\n\\t\\t<br>\\n\\t\\t<button mat-raised-button type=\\\"submit\\\" (click)=\\\"submitted=false\\\">Edit</button>\\n\\t</div>\\n\\t</div>\\n\\t</div>\\n</div>\"","module.exports = \".form-header {\\n  background-color: #327ebd;\\n  color: white;\\n  padding: 0 5px; }\\n\\n.mat-form-field {\\n  padding-left: 10px; }\\n\\n.validation-message {\\n  background-color: #00BCD4; }\\n\\n.container {\\n  padding-left: 10px;\\n  padding-right: 10px; }\\n\\n.form-container {\\n  padding: 5px 15px 15px 15px; }\\n\\n.form-component-holder {\\n  border: 1px solid #327ebd;\\n  background-color: white; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Validators,FormBuilder,FormGroup } from '@angular/forms';\nimport { EmailValidator } from '@angular/forms';\n@Component({\n  selector: 'cdk-reactive-forms',\n  templateUrl: './reactive-forms.component.html',\n  styleUrls: ['./reactive-forms.component.scss']\n})\nexport class ReactiveFormsComponent implements OnInit {\npublic profileForm:FormGroup;\nsubmitted = false;\nhide;\n  constructor(public form: FormBuilder) { \n  \t\tthis.profileForm = this.form.group({\n             username:['',{validators: [Validators.minLength(6)], updateOn: 'blur'}],\n            email:['',Validators.required],\n            number:[ '',{validators: [Validators.minLength(10)], updateOn: 'blur'}],\n            pwd:['',Validators.required]\n         });\n\n  }\n  get number() {\n  return this.profileForm.get('number');\n}\n  get username() {\n  return this.profileForm.get('username');\n}\n get email() {\n  return this.profileForm.get('email');\n}\n  // checkUserExists() {\n    \n       \n  //         this.profileForm.value.userName.setErrors({ userExists: `User Name  already exists` });\n       \n  // }\n onSubmit() { \n \tconsole.log('');\n \tthis.submitted = true; }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n<div fxLayout=\\\"column\\\"  class=\\\"components-container-gt-xs\\\"  [ngClass.xs]=\\\"'components-container-xs'\\\"  fxLayoutGap=\\\"20px\\\">\\n\\n\\t<div fxFlex class=\\\"form-component-holder mat-elevation-z4\\\">\\n\\t\\t<mat-toolbar class=\\\"form-header\\\">\\n\\t\\t\\t<h1 class=\\\"mat-headline center-align\\\">Template Driven Forms</h1>\\n\\t\\t</mat-toolbar>\\n\\t\\t<div [hidden]=\\\"submitted\\\" style=\\\"background-color: white;\\\">\\n\\n\\t\\t\\t<form (ngSubmit)=\\\"onSubmit()\\\" fxLayout=\\\"column\\\" >\\n\\t\\t\\t\\t<mat-form-field >\\n\\t\\t\\t\\t\\t<input matInput type=\\\"text\\\" [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" required minlength=\\\"4\\\">\\n\\t\\t\\t\\t</mat-form-field>\\n\\n\\t\\t\\t\\t<div  style=\\\"color:red\\\" *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"mat-body-1 center-align\\\">\\n\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"name.errors.required\\\">\\n\\t\\t\\t\\t\\t\\tName is required.\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"name.errors.minlength\\\">\\n\\t\\t\\t\\t\\t\\tName must be at least 4 characters long.\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input matInput type=\\\"number\\\"  [(ngModel)]=\\\"model.number\\\"  name=\\\"number\\\" #number=\\\"ngModel\\\" required minlength=\\\"10\\\">\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t<div  style=\\\"color:red\\\" *ngIf=\\\"number.invalid && (number.dirty || number.touched)\\\"\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"number.errors.required\\\">\\n\\t\\t\\t\\t\\t\\tnumber is required.\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"number.errors.minlength\\\">\\n\\t\\t\\t\\t\\t\\tnumber must be at least 10 characters long.\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<mat-input-container fxFlex>\\n      \\t\\t\\t\\t<input matInput placeholder=\\\"Character count (max. 100)\\\" maxlength=\\\"100\\\"\\t#characterCountHintExample value=\\\"Hello! How are you today?\\\">\\n      \\t\\t\\t\\t<mat-hint align=\\\"end\\\">{{ characterCountHintExample.value.length }} / 100\\n      \\t\\t\\t\\t</mat-hint>\\n    \\t\\t\\t</mat-input-container>\\n    \\t\\t\\t<mat-form-field>\\n    \\t\\t\\t   <input matInput placeholder=\\\"Enter your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" >\\n    \\t\\t\\t   <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n    \\t\\t\\t </mat-form-field>\\n\\t\\t\\t\\t<button mat-raised-button type=\\\"submit\\\"  [disabled]=\\\"name.invalid||number.invalid\\\" class=\\\"mat-subheading-2 center-align button-style\\\">Submit</button>\\n\\t\\t\\t</form>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\n\\t\\t<div [hidden]=\\\"!submitted\\\" style=\\\"background-color: white;\\\">\\n\\t\\t\\t<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around stretch\\\" >\\n\\t\\t\\t\\t<h2 class=\\\"mat-subheading-2 center-align\\\">You submitted the following:</h2>\\n\\t\\t\\t\\t<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" class=\\\"mat-body center-align\\\">\\n\\t\\t\\t\\t\\t<div >Name</div>\\n\\t\\t\\t\\t\\t<div>{{ model.name }}</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" class=\\\"mat-body center-align\\\">\\n\\t\\t\\t\\t\\t<div>Number</div>\\n\\t\\t\\t\\t\\t<div>{{ model.number }}</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" class=\\\"mat-body center-align\\\">\\n\\t\\t\\t\\t\\t<div >Password</div>\\n\\t\\t\\t\\t\\t<div>{{ model.pwd}}</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t<button mat-raised-button  type=\\\"submit\\\" class=\\\"button-style\\\" (click)=\\\"submitted=false\\\">Edit</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"","module.exports = \".form-header {\\n  background-color: #327ebd;\\n  color: white;\\n  padding: 0 5px; }\\n\\n.mat-form-field {\\n  padding-left: 10px; }\\n\\n.container {\\n  padding-left: 10px;\\n  padding-right: 10px; }\\n\\n.form-container {\\n  padding: 5px 15px 15px 15px; }\\n\\n.form-component-holder {\\n  border: 1px solid #327ebd;\\n  background-color: white; }\\n\\n.button-style {\\n  background-color: #327ebd;\\n  font-weight: bold; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User }    from './user';\n@Component({\n  selector: 'cdk-template-driven-forms',\n  templateUrl: './template-driven-forms.component.html',\n  styleUrls: ['./template-driven-forms.component.scss']\n})\nexport class TemplateDrivenFormsComponent implements OnInit {\nmodel = new User(18, 'User','',8086824175);\n  submitted = false;\n hide;\n  onSubmit() { this.submitted = true; }\n \n  newUser() {\n    this.model = new User(42, '',' ' , );\n  }\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class User {\n\n  constructor(\n    public id: number,\n    public name: string,\n    public pwd:string,\n  \tpublic number?: number,\n\n  ) {  }\n\n}"],"sourceRoot":""}