{"version":3,"sources":["webpack:///./src/app/tables/feature-table/feature-table.component.html","webpack:///./src/app/tables/feature-table/feature-table.component.scss","webpack:///./src/app/tables/feature-table/feature-table.component.ts","webpack:///./src/app/tables/feature-table/helpers.data.ts","webpack:///./src/app/tables/filter-table/filter-table.component.html","webpack:///./src/app/tables/filter-table/filter-table.component.scss","webpack:///./src/app/tables/filter-table/filter-table.component.ts","webpack:///./src/app/tables/filter-table/helpers.data.ts","webpack:///./src/app/tables/fixed-table/fixed-table.component.html","webpack:///./src/app/tables/fixed-table/fixed-table.component.scss","webpack:///./src/app/tables/fixed-table/fixed-table.component.ts","webpack:///./src/app/tables/fixed-table/helpers.data.ts","webpack:///./src/app/tables/responsive-table/helpers.data.ts","webpack:///./src/app/tables/responsive-table/responsive-table.component.html","webpack:///./src/app/tables/responsive-table/responsive-table.component.scss","webpack:///./src/app/tables/responsive-table/responsive-table.component.ts","webpack:///./src/app/tables/tables.module.ts","webpack:///./src/app/tables/tables.router.ts"],"names":[],"mappings":";;;;;;;;;AAAA,4bAA4b,6EAA6E,aAAa,4QAA4Q,2BAA2B,YAAY,mDAAmD,yHAAyH,kjCAAkjC,QAAQ,uQAAuQ,cAAc,gQAAgQ,UAAU,0RAA0R,WAAW,gKAAgK,2BAA2B,gjB;;;;;;;;;;;ACA9iG,iCAAiC,8BAA8B,iBAAiB,mBAAmB,EAAE,sBAAsB,gCAAgC,EAAE,6BAA6B,8BAA8B,4BAA4B,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACClL;AAEF;AACO;AACU;AACzB;AACA;AAO1D;IAQC;QALA,qBAAgB,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;QACzE,oBAAe,GAAG,IAAI,6DAAe,EAAE,CAAC;QACxC,cAAS,GAAG,IAAI,uEAAc,CAAS,IAAI,EAAE,EAAE,CAAC,CAAC;QAEjD,gBAAW,GAAG,2DAAa,CAAC;IACZ,CAAC;IAKjB,wCAAQ,GAAR;QAAA,iBASC;QARG,IAAI,CAAC,UAAU,GAAG,IAAI,+DAAiB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACzF,sDAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,IAAI,CACxD,mEAAY,CAAC,GAAG,CAAC,EACjB,2EAAoB,EAAE,CAAE;aACvB,SAAS,CAAC;YACT,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBAAC,MAAM,CAAC;YAAC,CAAC;YACjC,KAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC;QAC3D,CAAC,CAAC,CAAC;IACX,CAAC;IAED,6CAAa,GAAb;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QAAC,CAAC;QACvC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QAAC,CAAC;QAE/C,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC;QAC/E,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5E,CAAC;IACL,CAAC;IAED,4CAAY,GAAZ;QAAA,iBAUC;QATG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC;QAAC,CAAC;QAEjC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACzB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,cAAI,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAA9B,CAA8B,CAAC,CAAC;QAC/E,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,cAAI,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAA9B,CAA8B,CAAC,CAAC;QAC5E,CAAC;IACL,CAAC;IApCwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAY,8DAAY;4DAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;kCAAO,yDAAO;uDAAC;IACb;QAApB,+DAAS,CAAC,QAAQ,CAAC;kCAAS,wDAAU;yDAAC;IAX5B,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;;OACW,qBAAqB,CA+CjC;IAAD,4BAAC;CAAA;AA/CiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbyC;AAExC;AAEiB;AAU7C,IAAM,aAAa,GAAG;IACzB,0BAA0B,EAAG,iiGA8EhC,CAAC,IAAI,EAAE;IACN,wBAAwB,EAAC,6yNA4L1B;IACC,yBAAyB,EAAE,y3BAqD5B;CACA;AACD,+CAA+C;AAC/C,IAAM,MAAM,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ;IAC7E,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AACtE,IAAM,KAAK,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM;IACnE,WAAW,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ;IAC/D,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;AAIpE,oFAAoF;AACpF;IAKE;QAJA,6DAA6D;QAC7D,eAAU,GAAgC,IAAI,oDAAe,CAAa,EAAE,CAAC,CAAC;QAI5E,uCAAuC;QACvC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;YAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QAAC,CAAC;IACnD,CAAC;IALD,sBAAI,iCAAI;aAAR,cAAyB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;;;OAAA;IAOxD,uCAAuC;IACvC,iCAAO,GAAP;QACE,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QACrC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnC,CAAC;IAED,qCAAqC;IAC7B,uCAAa,GAArB;QACE,IAAM,IAAI,GACN,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;YAC3D,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QAE1E,MAAM,CAAC;YACL,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE;YACrC,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE;YACpD,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;SAC/D,CAAC;IACJ,CAAC;IACH,sBAAC;AAAD,CAAC;;AAED;;;;;;GAMG;AACH;IAAuC,qCAAe;IAQpD,2BAAoB,gBAAiC,EACjC,UAAwB,EACxB,KAAc;QAFlC,YAGE,iBAAO,SAIR;QAPmB,sBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,gBAAU,GAAV,UAAU,CAAc;QACxB,WAAK,GAAL,KAAK,CAAS;QATlC,mBAAa,GAAG,IAAI,oDAAe,CAAC,EAAE,CAAC,CAAC;QAIxC,kBAAY,GAAe,EAAE,CAAC;QAC9B,kBAAY,GAAe,EAAE,CAAC;QAO5B,4DAA4D;QAC5D,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,cAAM,YAAI,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,EAA7B,CAA6B,CAAC,CAAC;;IACpE,CAAC;IAbD,sBAAI,qCAAM;aAAV,cAAuB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;aACzD,UAAW,MAAc,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;;OADN;IAezD,iGAAiG;IACjG,mCAAO,GAAP;QAAA,iBAwBC;QAvBC,6EAA6E;QAC7E,IAAM,kBAAkB,GAAG;YACzB,IAAI,CAAC,gBAAgB,CAAC,UAAU;YAChC,IAAI,CAAC,KAAK,CAAC,UAAU;YACrB,IAAI,CAAC,aAAa;YAClB,IAAI,CAAC,UAAU,CAAC,IAAI;SACrB,CAAC;QAEF,MAAM,CAAC,0CAAe,eAAI,kBAAkB,EAAE,IAAI,CAAC,0DAAG,CAAC;YACrD,cAAc;YACd,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,UAAC,IAAc;gBAC3E,IAAI,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;gBACvD,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;YAEH,qBAAqB;YACrB,IAAM,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC;YAE5D,qDAAqD;YACrD,IAAM,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YACxE,KAAI,CAAC,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC5E,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC;QAC3B,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,sCAAU,GAAV,cAAc,CAAC;IAEf,kDAAkD;IAClD,oCAAQ,GAAR,UAAS,IAAgB;QAAzB,iBAmBC;QAlBC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAAC,CAAC;QAEtE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YACpB,IAAI,SAAS,GAAkB,EAAE,CAAC;YAClC,IAAI,SAAS,GAAkB,EAAE,CAAC;YAElC,MAAM,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC1B,KAAK,QAAQ;oBAAE,iBAAqC,EAApC,iBAAS,EAAE,iBAAS,CAAiB;oBAAC,KAAK,CAAC;gBAC5D,KAAK,UAAU;oBAAE,qBAAyC,EAAxC,iBAAS,EAAE,iBAAS,CAAqB;oBAAC,KAAK,CAAC;gBAClE,KAAK,UAAU;oBAAE,6BAAiD,EAAhD,iBAAS,EAAE,iBAAS,CAA6B;oBAAC,KAAK,CAAC;gBAC1E,KAAK,OAAO;oBAAE,uBAA2C,EAA1C,iBAAS,EAAE,iBAAS,CAAuB;oBAAC,KAAK,CAAC;YACnE,CAAC;YAED,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACxD,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAExD,MAAM,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAC/E,CAAC,CAAC,CAAC;IACL,CAAC;IACH,wBAAC;AAAD,CAAC,CAnEsC,mEAAU,GAmEhD;;;;;;;;;;;;;ACvcD,4MAA4M,sJAAsJ,2EAA2E,aAAa,kfAAkf,QAAQ,6OAA6O,cAAc,sOAAsO,UAAU,gQAAgQ,WAAW,0JAA0J,2BAA2B,gE;;;;;;;;;;;ACA/1D,iCAAiC,8BAA8B,iBAAiB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCd;AAEF;AACO;AACL;AAOpE;IAOG;QALK,qBAAgB,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;QAC/D,oBAAe,GAAG,IAAI,6DAAe,EAAE,CAAC;IAI7B,CAAC;IAEjB,uCAAQ,GAAR;QAAA,iBASE;QARD,IAAI,CAAC,UAAU,GAAG,IAAI,+DAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC1D,sDAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,IAAI,CACxD,mEAAY,CAAC,GAAG,CAAC,EACjB,2EAAoB,EAAE,CAAE;aACvB,SAAS,CAAC;YACT,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBAAC,MAAM,CAAC;YAAC,CAAC;YACjC,KAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC;QAC3D,CAAC,CAAC,CAAC;IACX,CAAC;IAZmB;QAApB,+DAAS,CAAC,QAAQ,CAAC;kCAAS,wDAAU;wDAAC;IAN9B,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;;OACW,oBAAoB,CAoBhC;IAAD,2BAAC;CAAA;AApBgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACX8C;AAE5C;AACmB;AAUtD,IAAM,MAAM,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ;IAC7E,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AACtE,IAAM,KAAK,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM;IACnE,WAAW,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ;IAC/D,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;AAEnE,oFAAoF;AACrF;IAKE;QAJA,6DAA6D;QAC7D,eAAU,GAAgC,IAAI,oDAAe,CAAa,EAAE,CAAC,CAAC;QAI5E,uCAAuC;QACvC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;YAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QAAC,CAAC;IACnD,CAAC;IALD,sBAAI,iCAAI;aAAR,cAAyB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;;;OAAA;IAOxD,uCAAuC;IACvC,iCAAO,GAAP;QACE,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QACrC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnC,CAAC;IAED,qCAAqC;IAC7B,uCAAa,GAArB;QACE,IAAM,IAAI,GACN,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;YAC3D,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QAE1E,MAAM,CAAC;YACL,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE;YACrC,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE;YACpD,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;SAC/D,CAAC;IACJ,CAAC;IACH,sBAAC;AAAD,CAAC;;AAED;;;;;;GAMG;AAEH;IAAuC,qCAAe;IAKpD,2BAAoB,gBAAiC;QAArD,YACE,iBAAO,SACR;QAFmB,sBAAgB,GAAhB,gBAAgB,CAAiB;QAJrD,mBAAa,GAAG,IAAI,oDAAe,CAAC,EAAE,CAAC,CAAC;;IAMxC,CAAC;IALD,sBAAI,qCAAM;aAAV,cAAuB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;aACzD,UAAW,MAAc,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;;OADN;IAOzD,iGAAiG;IACjG,mCAAO,GAAP;QAAA,iBAYC;QAXC,IAAM,kBAAkB,GAAG;YACzB,IAAI,CAAC,gBAAgB,CAAC,UAAU;YAChC,IAAI,CAAC,aAAa;SACnB,CAAC;QAEF,MAAM,CAAC,0CAAe,eAAI,kBAAkB,EAAE,IAAI,CAAC,0DAAG,CAAC;YACrD,MAAM,CAAC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,UAAC,IAAc;gBAC9D,IAAI,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;gBACvD,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,sCAAU,GAAV,cAAc,CAAC;IACjB,wBAAC;AAAD,CAAC,CAzBsC,mEAAU,GAyBhD;;;;;;;;;;;;;ACtFD,oxBAAoxB,QAAQ,uPAAuP,cAAc,gPAAgP,UAAU,0QAA0Q,WAAW,gKAAgK,2BAA2B,4E;;;;;;;;;;;ACA3uD,oCAAoC,uBAAuB,qBAAqB,EAAE,iCAAiC,oCAAoC,qBAAqB,EAAE,iDAAiD,uBAAuB,eAAe,cAAc,gBAAgB,qBAAqB,EAAE,mBAAmB,8BAA8B,iBAAiB,mBAAmB,EAAE,sBAAsB,gCAAgC,EAAE,6BAA6B,8BAA8B,4BAA4B,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;ACAzd;AACL;AAQpE;IAKG;QAJK,qBAAgB,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;QAC/D,oBAAe,GAAG,IAAI,6DAAe,EAAE,CAAC;IAG7B,CAAC;IAEjB,sCAAQ,GAAR;QACC,IAAI,CAAC,UAAU,GAAG,IAAI,+DAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC9D,CAAC;IATQ,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;;OACW,mBAAmB,CAW/B;IAAD,0BAAC;CAAA;AAX+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR+C;AAE5C;AACmB;AAUtD,IAAM,MAAM,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ;IAC7E,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AACtE,IAAM,KAAK,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM;IACnE,WAAW,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ;IAC/D,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;AAEnE,oFAAoF;AACrF;IAKE;QAJA,6DAA6D;QAC7D,eAAU,GAAgC,IAAI,oDAAe,CAAa,EAAE,CAAC,CAAC;QAI5E,uCAAuC;QACvC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;YAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QAAC,CAAC;IACnD,CAAC;IALD,sBAAI,iCAAI;aAAR,cAAyB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;;;OAAA;IAOxD,uCAAuC;IACvC,iCAAO,GAAP;QACE,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QACrC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnC,CAAC;IAED,qCAAqC;IAC7B,uCAAa,GAArB;QACE,IAAM,IAAI,GACN,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;YAC3D,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QAE1E,MAAM,CAAC;YACL,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE;YACrC,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE;YACpD,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;SAC/D,CAAC;IACJ,CAAC;IACH,sBAAC;AAAD,CAAC;;AAED;;;;;;GAMG;AAEH;IAAuC,qCAAe;IAKpD,2BAAoB,gBAAiC;QAArD,YACE,iBAAO,SACR;QAFmB,sBAAgB,GAAhB,gBAAgB,CAAiB;QAJrD,mBAAa,GAAG,IAAI,oDAAe,CAAC,EAAE,CAAC,CAAC;;IAMxC,CAAC;IALD,sBAAI,qCAAM;aAAV,cAAuB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;aACzD,UAAW,MAAc,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;;OADN;IAOzD,iGAAiG;IACjG,mCAAO,GAAP;QAAA,iBAYC;QAXC,IAAM,kBAAkB,GAAG;YACzB,IAAI,CAAC,gBAAgB,CAAC,UAAU;YAChC,IAAI,CAAC,aAAa;SACnB,CAAC;QAEF,MAAM,CAAC,0CAAe,eAAI,kBAAkB,EAAE,IAAI,CAAC,0DAAG,CAAC;YACrD,MAAM,CAAC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,UAAC,IAAc;gBAC9D,IAAI,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;gBACvD,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,sCAAU,GAAV,cAAc,CAAC;IACjB,wBAAC;AAAD,CAAC,CAzBsC,mEAAU,GAyBhD;;;;;;;;;;;;;;;;ACtFM,IAAM,sBAAsB,GAAG;IACpC,MAAM,EAAG;QACH;YACI,IAAI,EAAC,IAAI;YACT,GAAG,EAAC,IAAI;YACR,KAAK,EAAC,KAAK;SACd;QACD;YACI,IAAI,EAAC,MAAM;YACX,GAAG,EAAC,MAAM;YACV,KAAK,EAAC,KAAK;SACd;QACD;YACI,IAAI,EAAC,UAAU;YACf,GAAG,EAAC,UAAU;YACd,KAAK,EAAC,KAAK;SACd;QACD;YACI,IAAI,EAAC,OAAO;YACZ,GAAG,EAAC,OAAO;YACX,KAAK,EAAC,KAAK;SACd;KACJ;IACD,IAAI,EAAG,CAAC;YACJ,EAAE,EAAE,GAAG;YACP,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,MAAM;SAChB,EAAC;YACE,EAAE,EAAE,GAAG;YACP,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAC;YACE,EAAE,EAAE,GAAG;YACP,IAAI,EAAE,aAAa;YACnB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAE;YACC,EAAE,EAAE,GAAG;YACP,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAC;YACE,EAAE,EAAE,GAAG;YACP,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,KAAK;SACf,EAAC;YACE,EAAE,EAAE,GAAG;YACP,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,KAAK;SACf,EAAC;YACE,EAAE,EAAE,GAAG;YACP,IAAI,EAAE,aAAa;YACnB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAC;YACE,EAAE,EAAE,GAAG;YACP,IAAI,EAAE,UAAU;YAChB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,KAAK;SACf,EAAC;YACE,EAAE,EAAE,GAAG;YACP,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,QAAQ;SAClB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,QAAQ;SAClB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,UAAU;YAChB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,QAAQ;SAClB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,QAAQ;SAClB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,QAAQ;SAClB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,UAAU;YAChB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,QAAQ;SAClB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,UAAU;YAChB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,QAAQ;SAClB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,UAAU;YAChB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,aAAa;YACnB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,QAAQ;SAClB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,SAAS;SACnB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,aAAa;YACnB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,QAAQ;SAClB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,QAAQ;SAClB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,aAAa;YACnB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,QAAQ;SAClB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,aAAa;YACnB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,aAAa;YACnB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,QAAQ;SAClB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,QAAQ;SAClB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,QAAQ;SAClB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,cAAc;YACpB,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,OAAO;SACjB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,QAAQ;SAClB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,SAAS;SACnB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,UAAU;YAChB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,SAAS;SACnB,EAAC,EAAE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,aAAa;YACnB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,KAAK;SACf,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,aAAa;YACnB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,OAAO;SACjB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,QAAQ;SAClB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,cAAc;YACpB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,SAAS;SACnB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,aAAa;YACnB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,KAAK;SACf,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,aAAa;YACnB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,QAAQ;SAClB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,QAAQ;SAClB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,UAAU;YAChB,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,QAAQ;SAClB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,QAAQ;SAClB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,aAAa;YACnB,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,QAAQ;SAClB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,KAAK;SACf,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,UAAU;YAChB,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,QAAQ;SAClB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,MAAM;SAChB,EAAC;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,SAAS;SACnB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,OAAO;SACjB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,UAAU;YAChB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,KAAK;SACf,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,QAAQ;SAClB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,KAAK;SACf,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,UAAU;YAChB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,MAAM;SAChB,EAAE;YACC,EAAE,EAAE,KAAK;YACT,IAAI,EAAE,aAAa;YACnB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,CAAC;CACL;AAED,+CAA+C;;;;;;;;;;;;AC7gB/C,ihBAAihB,QAAQ,wDAAwD,SAAS,8RAA8R,aAAa,wJAAwJ,sCAAsC,4OAA4O,uCAAuC,4PAA4P,2MAA2M,2BAA2B,iR;;;;;;;;;;;ACAxzD,iCAAiC,8BAA8B,iBAAiB,mBAAmB,EAAE,sBAAsB,gCAAgC,EAAE,6BAA6B,8BAA8B,4BAA4B,EAAE,WAAW,2BAA2B,8BAA8B,cAAc,eAAe,gBAAgB,wBAAwB,EAAE,mBAAmB,qBAAqB,yBAAyB,sDAAsD,EAAE,cAAc,wBAAwB,2BAA2B,mBAAmB,EAAE,gCAAgC,sDAAsD,EAAE,iCAAiC,0CAA0C,sDAAsD,EAAE,uCAAuC,4BAA4B,EAAE,yBAAyB,oBAAoB,uBAAuB,sDAAsD,EAAE,cAAc,wBAAwB,qBAAqB,yBAAyB,8BAA8B,EAAE,0CAA0C,WAAW,gBAAgB,EAAE,mBAAmB,uBAAuB,EAAE,iBAAiB,mBAAmB,0BAA0B,kBAAkB,mBAAmB,uBAAuB,iBAAiB,yBAAyB,iBAAiB,EAAE,cAAc,oCAAoC,qBAAqB,4BAA4B,EAAE,cAAc,oCAAoC,qBAAqB,sBAAsB,wBAAwB,EAAE,qBAAqB,oHAAoH,4CAA4C,kBAAkB,wBAAwB,gCAAgC,EAAE,yBAAyB,uBAAuB,EAAE,EAAE,6BAA6B,oBAAoB,EAAE,0CAA0C,4BAA4B,EAAE,2CAA2C,kBAAkB,2BAA2B,qBAAqB,EAAE,qBAAqB,qBAAqB,kBAAkB,wBAAwB,uBAAuB,oBAAoB,EAAE,gBAAgB,mBAAmB,sBAAsB,EAAE,mBAAmB,mBAAmB,EAAE,yCAAyC,oBAAoB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7zE;AACnD;AACP;AAOjD;IAkBG;QAhBA,qBAAgB,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;QACjE,SAAI,GAAe,EAAE,CAAC;QAInB,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,EAAE,CAAC;QACd,YAAO,GAAG,oEAAsB,CAAC;QAGvB,SAAI,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC1B,WAAM,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC5B,SAAI,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC1B,SAAI,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC1B,SAAI,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC1B,QAAG,GAAG,IAAI,0DAAY,EAAE,CAAC;IAEnC,CAAC;IAED,2CAAQ,GAAR;QACI,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IACF,uCAAI,GAAJ,UAAK,KAAK;QACL,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QAClB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAE,CAAC,GAAG,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,GAAE,KAAK,CAAC,QAAQ,GAAC,KAAK,CAAC,SAAS,GAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC;YACnG,IAAI,CAAC,IAAI,GAAO,IAAI,CAAC,IAAI,SAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC;QACpD,CAAC;IACL,CAAC;IACD,0CAAO,GAAP;QACI,GAAG,CAAC,CAAC,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,QAAQ,EAAC,CAAC,EAAE,EAAE,CAAC;YAC/B,IAAI,CAAC,IAAI,GAAO,IAAI,CAAC,IAAI,SAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC;QACpD,CAAC;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;IAC/C,CAAC;IACD,2CAAQ,GAAR,UAAS,GAAG;IACZ,CAAC;IA/BqB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAa,8DAAY;gEAAC;IAItC;QAAR,2DAAK,EAAE;;4DAAQ;IACP;QAAR,2DAAK,EAAE;;kEAAc;IACZ;QAAT,4DAAM,EAAE;;0DAA2B;IAC1B;QAAT,4DAAM,EAAE;;4DAA6B;IAC5B;QAAT,4DAAM,EAAE;;0DAA2B;IAC1B;QAAT,4DAAM,EAAE;;0DAA2B;IAC1B;QAAT,4DAAM,EAAE;;0DAA2B;IAC1B;QAAT,4DAAM,EAAE;;yDAA0B;IAjB1B,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;;OACW,wBAAwB,CAsCpC;IAAD,+BAAC;CAAA;AAtCoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTI;AACM;AACmB;AACV;AAEH;AAEM;AACJ;AACA;AACM;AACN;AACM;AACJ;AACS;AACD;AACE;AACX;AAEC;AAMC;AAGrB;AACkC;AACC;AACK;AACG;AACS;AACf;AAGpE;IACJ,8DAAqB,CAAC,YAAY,EAAE,mEAAc,CAAC,CAAC;IACpD,MAAM,CAAC,0CAAI,CAAC;AACd,CAAC;AA0CD;IAAA;IAA4B,CAAC;IAAhB,YAAY;QAxCxB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,qEAAgB;gBAChB,wEAAe;gBACf,oEAAa;gBACb,oEAAa;gBACb,0EAAgB;gBAChB,oEAAa;gBACb,2EAAgB;gBAChB,kEAAmB;gBACnB,0DAAW;gBACX,gFAAkB;gBAClB,uEAAc;gBACd,+EAAkB;gBAClB,iFAAmB;gBACnB,sEAAmB;gBACnB,uEAAc;gBACd,qEAAkB;gBAClB,gEAAa;gBACb,oEAAiB;gBACjB,mEAAgB;gBAChB,iEAAc;gBACd,wEAAqB;gBACrB,uEAAiB,CAAC,OAAO,CAAC;oBACxB,OAAO,EAAE,kEAAY;oBACrB,UAAU,EAAE,kBAAkB;iBAC/B,CAAC;gBACF,iEAAkB;aACnB;YACD,YAAY,EAAE;gBACb,0FAAoB;gBACpB,6FAAqB;gBACrB,sGAAwB;gBACxB,uFAAmB;aAAC;YAErB,OAAO,EAAE,EACN;SAEJ,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;AClFgB;AACc;AACmB;AACM;AACS;AAEzF,IAAM,oBAAoB,GAAW;IAClC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sFAAmB,EAAG,IAAI,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,EAAC;IAC/E,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,4FAAqB,EAAE,IAAI,EAAE,EAAE,SAAS,EAAE,UAAU,EAAE,EAAC;IACtF,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,qGAAwB,EAAE,IAAI,EAAE,EAAE,SAAS,EAAE,YAAY,EAAE,EAAC;CAC/F,CAAC;AAUF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAR9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY,CAAC,QAAQ,CAAC,oBAAoB,CAAC;aAC3C;YACF,OAAO,EAAE;gBACP,4DAAY;aACb;SACF,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH","file":"tables-tables-module.js","sourcesContent":["module.exports = \"<div fxLayout=\\\"column\\\"  class=\\\"components-container-gt-xs\\\"  [ngClass.xs]=\\\"'components-container-xs'\\\"  fxLayoutGap=\\\"20px\\\">\\n\\n\\t<div fxFlex class=\\\"table-component-holder mat-elevation-z4\\\">\\n\\t\\t<mat-toolbar class=\\\"table-header\\\">\\n\\t\\t\\t<h1 class=\\\"mat-headline center-align\\\" >Featured Table</h1>\\n\\t\\t</mat-toolbar>\\n\\t\\t<div class=\\\"table-container\\\">\\n\\t\\t\\t<div class=\\\"example-header\\\" style=\\\"padding: 0 20px;\\\">\\n\\t\\t\\t\\t<mat-form-field floatPlaceholder=\\\"never\\\" style=\\\"color: black; width: 100%;\\\">\\n\\t\\t\\t\\t\\t<input matInput #filter placeholder=\\\"Filter users\\\">\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div fxLayout=\\\"row\\\" class=\\\"example-header example-selection-header mat-headline center-align \\\"\\n\\t\\t\\t\\t*ngIf=\\\"!selection.isEmpty()\\\">\\n\\t\\t\\t\\t{{selection.selected.length}}\\n\\t\\t\\t\\t{{selection.selected.length == 1 ? 'user' : 'users'}}\\n\\t\\t\\t\\tselected\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<mat-table #table [dataSource]=\\\"dataSource\\\" matSort style=\\\"margin-top: 20px;\\\">\\n\\n\\t\\t\\t\\t<!--- Note that these columns can be defined in any order.\\n\\t\\t\\t\\tThe actual rendered columns are set as a property on the row definition\\\" -->\\n\\n\\t\\t\\t\\t<!-- Checkbox Column -->\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"select\\\">\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef>\\n\\t\\t\\t\\t\\t\\t<mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n\\t\\t\\t\\t\\t\\t\\t[checked]=\\\"isAllSelected()\\\"\\n\\t\\t\\t\\t\\t\\t\\t[indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n\\t\\t\\t\\t\\t\\t\\t</mat-checkbox>\\n\\t\\t\\t\\t\\t</mat-header-cell>\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let row\\\">\\n\\t\\t\\t\\t\\t\\t<mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n\\t\\t\\t\\t\\t\\t\\t(change)=\\\"$event ? selection.toggle(row.id) : null\\\"\\n\\t\\t\\t\\t\\t\\t\\t[checked]=\\\"selection.isSelected(row.id)\\\">\\n\\t\\t\\t\\t\\t\\t\\t</mat-checkbox>\\n\\t\\t\\t\\t\\t</mat-cell>\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t<!-- ID Column -->\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"userId\\\">\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </mat-cell>\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t<!-- Progress Column -->\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"progress\\\">\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header> Progress </mat-header-cell>\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let row\\\"> {{row.progress}}% </mat-cell>\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t<!-- Name Column -->\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"userName\\\">\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </mat-cell>\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t<!-- Color Column -->\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"color\\\">\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header> Color </mat-header-cell>\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\"> {{row.color}} </mat-cell>\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t<mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n\\t\\t\\t\\t<mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\n\\t\\t\\t\\t[class.example-selected-row]=\\\"selection.isSelected(row.id)\\\"\\n\\t\\t\\t\\t(click)=\\\"selection.toggle(row.id)\\\">\\n\\t\\t\\t\\t</mat-row>\\n\\t\\t\\t</mat-table>\\n\\n\\t\\t\\t<div class=\\\"example-no-results\\\"\\n\\t\\t\\t\\t[style.display]=\\\"dataSource?.renderedData.length == 0 ? '' : 'none'\\\">\\n\\t\\t\\t\\tNo users found matching filter.\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<mat-paginator #paginator\\n\\t\\t\\t\\t[length]=\\\"100\\\"\\n\\t\\t\\t\\t[pageIndex]=\\\"0\\\"\\n\\t\\t\\t\\t[pageSize]=\\\"25\\\"\\n\\t\\t\\t\\t[pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n\\t\\t\\t</mat-paginator>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"","module.exports = \".table-header {\\n  background-color: #327ebd;\\n  color: white;\\n  padding: 0 5px; }\\n\\n.table-container {\\n  padding: 5px 15px 15px 15px; }\\n\\n.table-component-holder {\\n  border: 1px solid #327ebd;\\n  background-color: white; }\\n\"","\nimport {fromEvent as observableFromEvent,  Observable } from 'rxjs';\n\nimport {distinctUntilChanged, debounceTime} from 'rxjs/operators';\nimport { Component, OnInit , ElementRef, ViewChild} from '@angular/core';\nimport { TABLE_HELPERS, ExampleDatabase, ExampleDataSource } from './helpers.data';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n@Component({\n  selector: 'cdk-feature-table',\n  templateUrl: './feature-table.component.html',\n  styleUrls: ['./feature-table.component.scss']\n})\nexport class FeatureTableComponent implements OnInit {\n\n\tshowNavListCode;\n\tdisplayedColumns = ['select', 'userId', 'userName', 'progress', 'color'];\n\texampleDatabase = new ExampleDatabase();\n\tselection = new SelectionModel<string>(true, []);\n\tdataSource: ExampleDataSource | null;\n\tallfeatures = TABLE_HELPERS;\n\tconstructor() { }\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\n\t@ViewChild(MatSort) sort: MatSort;\n\t@ViewChild('filter') filter: ElementRef;\n\n\tngOnInit() {\n\t    this.dataSource = new ExampleDataSource(this.exampleDatabase, this.paginator, this.sort);\n\t    observableFromEvent(this.filter.nativeElement, 'keyup').pipe(\n\t        debounceTime(150),\n\t        distinctUntilChanged(),)\n\t        .subscribe(() => {\n\t          if (!this.dataSource) { return; }\n\t          this.dataSource.filter = this.filter.nativeElement.value;\n\t        });\n\t}\n\n\tisAllSelected(): boolean {\n\t    if (!this.dataSource) { return false; }\n\t    if (this.selection.isEmpty()) { return false; }\n\n\t    if (this.filter.nativeElement.value) {\n\t      return this.selection.selected.length == this.dataSource.renderedData.length;\n\t    } else {\n\t      return this.selection.selected.length == this.exampleDatabase.data.length;\n\t    }\n\t}\n\n\tmasterToggle() {\n\t    if (!this.dataSource) { return; }\n\n\t    if (this.isAllSelected()) {\n\t      this.selection.clear();\n\t    } else if (this.filter.nativeElement.value) {\n\t      this.dataSource.renderedData.forEach(data => this.selection.select(data.id));\n\t    } else {\n\t      this.exampleDatabase.data.forEach(data => this.selection.select(data.id));\n\t    }\n\t}\n\n}\n","\nimport {merge as observableMerge, BehaviorSubject, Observable} from 'rxjs';\n\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport {DataSource} from '@angular/cdk/collections';\nimport {MatPaginator, MatSort} from '@angular/material';\n\n\n\n\n\n\nimport { UserData } from '../interfaces';\n\nexport const TABLE_HELPERS = {\n    allFeaturesTablehtmlsource:  `<div class=\"example-header\" [style.display]=\"selection.isEmpty() ? '' : 'none'\">\n  <mat-form-field floatPlaceholder=\"never\">\n    <input matInput #filter placeholder=\"Filter users\">\n  </mat-form-field>\n</div>\n<div class=\"example-header example-selection-header\"\n     *ngIf=\"!selection.isEmpty()\">\n  {{selection.selected.length}}\n  {{selection.selected.length == 1 ? 'user' : 'users'}}\n  selected\n</div>\n\n<div class=\"example-container mat-elevation-z8\">\n\n  <mat-table #table [dataSource]=\"dataSource\" matSort>\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Checkbox Column -->\n    <ng-container matColumnDef=\"select\">\n      <mat-header-cell *matHeaderCellDef>\n        <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                     [checked]=\"isAllSelected()\"\n                     [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n        </mat-checkbox>\n      </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">\n        <mat-checkbox (click)=\"$event.stopPropagation()\"\n                     (change)=\"$event ? selection.toggle(row.id) : null\"\n                     [checked]=\"selection.isSelected(row.id)\">\n        </mat-checkbox>\n      </mat-cell>\n    </ng-container>\n\n    <!-- ID Column -->\n    <ng-container matColumnDef=\"userId\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.id}} </mat-cell>\n    </ng-container>\n\n    <!-- Progress Column -->\n    <ng-container matColumnDef=\"progress\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Progress </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.progress}}% </mat-cell>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"userName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.name}} </mat-cell>\n    </ng-container>\n\n    <!-- Color Column -->\n    <ng-container matColumnDef=\"color\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Color </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.color}} </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n            [class.example-selected-row]=\"selection.isSelected(row.id)\"\n            (click)=\"selection.toggle(row.id)\">\n    </mat-row>\n  </mat-table>\n\n  <div class=\"example-no-results\"\n       [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n    No users found matching filter.\n  </div>\n\n  <mat-paginator #paginator\n                [length]=\"dataSource.filteredData.length\"\n                [pageIndex]=\"0\"\n                [pageSize]=\"25\"\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\n  </mat-paginator>\n</div>\n`.trim(),\n  allFeaturesTabletssource:`import {Component, ElementRef, ViewChild} from '@angular/core';\nimport {DataSource} from '@angular/cdk/collections';\nimport {MatPaginator, MatSort} from '@angular/material';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/observable/fromEvent';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/debounceTime';\n\n/**\n * @title Feature-rich data table\n */\n@Component({\n  selector: 'table-overview-example',\n  styleUrls: ['table-overview-example.css'],\n  templateUrl: 'table-overview-example.html',\n})\nexport class TableOverviewExample {\n  displayedColumns = ['select', 'userId', 'userName', 'progress', 'color'];\n  exampleDatabase = new ExampleDatabase();\n  selection = new SelectionModel<string>(true, []);\n  dataSource: ExampleDataSource | null;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild('filter') filter: ElementRef;\n\n  ngOnInit() {\n    this.dataSource = new ExampleDataSource(this.exampleDatabase, this.paginator, this.sort);\n    Observable.fromEvent(this.filter.nativeElement, 'keyup')\n        .debounceTime(150)\n        .distinctUntilChanged()\n        .subscribe(() => {\n          if (!this.dataSource) { return; }\n          this.dataSource.filter = this.filter.nativeElement.value;\n        });\n  }\n\n  isAllSelected(): boolean {\n    if (!this.dataSource) { return false; }\n    if (this.selection.isEmpty()) { return false; }\n\n    if (this.filter.nativeElement.value) {\n      return this.selection.selected.length == this.dataSource.renderedData.length;\n    } else {\n      return this.selection.selected.length == this.exampleDatabase.data.length;\n    }\n  }\n\n  masterToggle() {\n    if (!this.dataSource) { return; }\n\n    if (this.isAllSelected()) {\n      this.selection.clear();\n    } else if (this.filter.nativeElement.value) {\n      this.dataSource.renderedData.forEach(data => this.selection.select(data.id));\n    } else {\n      this.exampleDatabase.data.forEach(data => this.selection.select(data.id));\n    }\n  }\n}\n\n/** Constants used to fill up our data base. */\nconst COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\n  'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\nconst NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n  'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n  'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  color: string;\n}\n\n/** An example database that the data source uses to retrieve data for the table. */\nexport class ExampleDatabase {\n  /** Stream that emits whenever the data has been modified. */\n  dataChange: BehaviorSubject<UserData[]> = new BehaviorSubject<UserData[]>([]);\n  get data(): UserData[] { return this.dataChange.value; }\n\n  constructor() {\n    // Fill up the database with 100 users.\n    for (let i = 0; i < 100; i++) { this.addUser(); }\n  }\n\n  /** Adds a new user to the database. */\n  addUser() {\n    const copiedData = this.data.slice();\n    copiedData.push(this.createNewUser());\n    this.dataChange.next(copiedData);\n  }\n\n  /** Builds and returns a new User. */\n  private createNewUser() {\n    const name =\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n    return {\n      id: (this.data.length + 1).toString(),\n      name: name,\n      progress: Math.round(Math.random() * 100).toString(),\n      color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n    };\n  }\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource<any> {\n  _filterChange = new BehaviorSubject('');\n  get filter(): string { return this._filterChange.value; }\n  set filter(filter: string) { this._filterChange.next(filter); }\n\n  filteredData: UserData[] = [];\n  renderedData: UserData[] = [];\n\n  constructor(private _exampleDatabase: ExampleDatabase,\n              private _paginator: MatPaginator,\n              private _sort: MatSort) {\n    super();\n\n    // Reset to the first page when the user changes the filter.\n    this._filterChange.subscribe(() => this._paginator.pageIndex = 0);\n  }\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<UserData[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this._exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this._filterChange,\n      this._paginator.page,\n    ];\n\n    return Observable.merge(...displayDataChanges).map(() => {\n      // Filter data\n      this.filteredData = this._exampleDatabase.data.slice().filter((item: UserData) => {\n        let searchStr = (item.name + item.color).toLowerCase();\n        return searchStr.indexOf(this.filter.toLowerCase()) != -1;\n      });\n\n      // Sort filtered data\n      const sortedData = this.sortData(this.filteredData.slice());\n\n      // Grab the page's slice of the filtered sorted data.\n      const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\n      this.renderedData = sortedData.splice(startIndex, this._paginator.pageSize);\n      return this.renderedData;\n    });\n  }\n\n  disconnect() {}\n\n  /** Returns a sorted copy of the database data. */\n  sortData(data: UserData[]): UserData[] {\n    if (!this._sort.active || this._sort.direction == '') { return data; }\n\n    return data.sort((a, b) => {\n      let propertyA: number|string = '';\n      let propertyB: number|string = '';\n\n      switch (this._sort.active) {\n        case 'userId': [propertyA, propertyB] = [a.id, b.id]; break;\n        case 'userName': [propertyA, propertyB] = [a.name, b.name]; break;\n        case 'progress': [propertyA, propertyB] = [a.progress, b.progress]; break;\n        case 'color': [propertyA, propertyB] = [a.color, b.color]; break;\n      }\n\n      let valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      let valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n\n      return (valueA < valueB ? -1 : 1) * (this._sort.direction == 'asc' ? 1 : -1);\n    });\n  }\n}\n` ,\n  allFeaturesTablecsssource: `/* Structure */\n.example-container {\n  display: flex;\n  flex-direction: column;\n  min-width: 300px;\n}\n\n.example-header {\n  min-height: 56px;\n  max-height: 56px;\n  display: flex;\n  align-items: center;\n  padding: 8px 24px 0;\n  font-size: 20px;\n  justify-content: space-between;\n  border-bottom: 1px solid transparent;\n}\n\n.mat-form-field {\n  font-size: 14px;\n  flex-grow: 1;\n  margin-top: 8px;\n}\n\n.example-no-results {\n  display: flex;\n  justify-content: center;\n  padding: 24px;\n  font-size: 12px;\n  font-style: italic;\n}\n\n/** Selection styles */\n.example-selection-header {\n  font-size: 18px;\n}\n\n.mat-column-select {\n  max-width: 54px;\n}\n\n.mat-row:hover, .example-selected-row {\n  background: #f5f5f5;\n}\n\n.mat-row:active, .mat-row.example-selected-row {\n  background: #eaeaea;\n}\n\n.mat-table {\n  overflow: auto;\n  max-height: 500px;\n}\n`\n}\n/** Constants used to fill up our data base. */\nconst COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\n  'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\nconst NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n  'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n  'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n\n\n\n/** An example database that the data source uses to retrieve data for the table. */\nexport class ExampleDatabase {\n  /** Stream that emits whenever the data has been modified. */\n  dataChange: BehaviorSubject<UserData[]> = new BehaviorSubject<UserData[]>([]);\n  get data(): UserData[] { return this.dataChange.value; }\n\n  constructor() {\n    // Fill up the database with 100 users.\n    for (let i = 0; i < 100; i++) { this.addUser(); }\n  }\n\n  /** Adds a new user to the database. */\n  addUser() {\n    const copiedData = this.data.slice();\n    copiedData.push(this.createNewUser());\n    this.dataChange.next(copiedData);\n  }\n\n  /** Builds and returns a new User. */\n  private createNewUser() {\n    const name =\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n    return {\n      id: (this.data.length + 1).toString(),\n      name: name,\n      progress: Math.round(Math.random() * 100).toString(),\n      color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n    };\n  }\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource<any> {\n  _filterChange = new BehaviorSubject('');\n  get filter(): string { return this._filterChange.value; }\n  set filter(filter: string) { this._filterChange.next(filter); }\n\n  filteredData: UserData[] = [];\n  renderedData: UserData[] = [];\n\n  constructor(private _exampleDatabase: ExampleDatabase,\n              private _paginator: MatPaginator,\n              private _sort: MatSort) {\n    super();\n\n    // Reset to the first page when the user changes the filter.\n    this._filterChange.subscribe(() => this._paginator.pageIndex = 0);\n  }\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<UserData[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this._exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this._filterChange,\n      this._paginator.page,\n    ];\n\n    return observableMerge(...displayDataChanges).pipe(map(() => {\n      // Filter data\n      this.filteredData = this._exampleDatabase.data.slice().filter((item: UserData) => {\n        let searchStr = (item.name + item.color).toLowerCase();\n        return searchStr.indexOf(this.filter.toLowerCase()) != -1;\n      });\n\n      // Sort filtered data\n      const sortedData = this.sortData(this.filteredData.slice());\n\n      // Grab the page's slice of the filtered sorted data.\n      const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\n      this.renderedData = sortedData.splice(startIndex, this._paginator.pageSize);\n      return this.renderedData;\n    }));\n  }\n\n  disconnect() {}\n\n  /** Returns a sorted copy of the database data. */\n  sortData(data: UserData[]): UserData[] {\n    if (!this._sort.active || this._sort.direction == '') { return data; }\n\n    return data.sort((a, b) => {\n      let propertyA: number|string = '';\n      let propertyB: number|string = '';\n\n      switch (this._sort.active) {\n        case 'userId': [propertyA, propertyB] = [a.id, b.id]; break;\n        case 'userName': [propertyA, propertyB] = [a.name, b.name]; break;\n        case 'progress': [propertyA, propertyB] = [a.progress, b.progress]; break;\n        case 'color': [propertyA, propertyB] = [a.color, b.color]; break;\n      }\n\n      let valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      let valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n\n      return (valueA < valueB ? -1 : 1) * (this._sort.direction == 'asc' ? 1 : -1);\n    });\n  }\n}\n\n","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-evenly stretch\\\" >\\n\\t\\t\\n\\t<div class=\\\"\\\" style=\\\"background-color: #4e9814\\\" >\\n\\t\\t<div class=\\\"table-header\\\" style=\\\"padding: 0 20px;\\\">\\n\\t\\t\\t<h1 class=\\\"mat-headline center-align\\\" >Tables with filtering</h1>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"example-header\\\" style=\\\"padding: 0 20px;\\\">\\n\\t\\t\\t<mat-form-field floatPlaceholder=\\\"never\\\" style=\\\"color: white; width: 100%;\\\">\\n\\t\\t\\t\\t<input matInput #filter placeholder=\\\"Filter users\\\">\\n\\t\\t\\t</mat-form-field>\\n\\t\\t</div>\\n\\n\\t\\t<mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n\\t\\t\\t<!--- Note that these columns can be defined in any order.\\n\\t\\t\\tThe actual rendered columns are set as a property on the row definition\\\" -->\\n\\n\\t\\t\\t<!-- ID Column -->\\n\\t\\t\\t<ng-container matColumnDef=\\\"userId\\\">\\n\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\n\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </mat-cell>\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t<!-- Progress Column -->\\n\\t\\t\\t<ng-container matColumnDef=\\\"progress\\\">\\n\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef> Progress </mat-header-cell>\\n\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let row\\\"> {{row.progress}}% </mat-cell>\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t<!-- Name Column -->\\n\\t\\t\\t<ng-container matColumnDef=\\\"userName\\\">\\n\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\n\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </mat-cell>\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t<!-- Color Column -->\\n\\t\\t\\t<ng-container matColumnDef=\\\"color\\\">\\n\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef> Color </mat-header-cell>\\n\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\"> {{row.color}} </mat-cell>\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t<mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n\\t\\t\\t<mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n\\t\\t\\t\\n\\t\\t</mat-table>\\n\\t</div>\\n\\n</div>\\n\\n\"","module.exports = \".table-header {\\n  background-color: #327ebd;\\n  color: white; }\\n\"","\nimport {fromEvent as observableFromEvent,  Observable } from 'rxjs';\n\nimport {distinctUntilChanged, debounceTime} from 'rxjs/operators';\nimport { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { ExampleDatabase, ExampleDataSource } from './helpers.data';\n\n@Component({\n  selector: 'cdk-filter-table',\n  templateUrl: './filter-table.component.html',\n  styleUrls: ['./filter-table.component.scss']\n})\nexport class FilterTableComponent implements OnInit {\n\n\tpublic displayedColumns = ['userId', 'userName', 'progress', 'color'];\n\tpublic exampleDatabase = new ExampleDatabase();\n\tpublic dataSource: ExampleDataSource | null;\n  \tpublic showFilterTableCode;\n  \t@ViewChild('filter') filter: ElementRef;\n  \tconstructor() { }\n\n  \tngOnInit() {\n  \t\tthis.dataSource = new ExampleDataSource(this.exampleDatabase);\n        observableFromEvent(this.filter.nativeElement, 'keyup').pipe(\n            debounceTime(150),\n            distinctUntilChanged(),)\n            .subscribe(() => {\n              if (!this.dataSource) { return; }\n              this.dataSource.filter = this.filter.nativeElement.value;\n            });\n    }\n\n}\n","\nimport {merge as observableMerge,  BehaviorSubject ,  Observable } from 'rxjs';\n\nimport {map} from 'rxjs/operators';\nimport { DataSource } from '@angular/cdk/collections';\nimport { UserData } from '../interfaces';\n\n\n\n\n\n\n\n\nconst COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\n  'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\nconst NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n  'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n  'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n\n /** An example database that the data source uses to retrieve data for the table. */\nexport class ExampleDatabase {\n  /** Stream that emits whenever the data has been modified. */\n  dataChange: BehaviorSubject<UserData[]> = new BehaviorSubject<UserData[]>([]);\n  get data(): UserData[] { return this.dataChange.value; }\n\n  constructor() {\n    // Fill up the database with 100 users.\n    for (let i = 0; i < 100; i++) { this.addUser(); }\n  }\n\n  /** Adds a new user to the database. */\n  addUser() {\n    const copiedData = this.data.slice();\n    copiedData.push(this.createNewUser());\n    this.dataChange.next(copiedData);\n  }\n\n  /** Builds and returns a new User. */\n  private createNewUser() {\n    const name =\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n    return {\n      id: (this.data.length + 1).toString(),\n      name: name,\n      progress: Math.round(Math.random() * 100).toString(),\n      color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n    };\n  }\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\n\nexport class ExampleDataSource extends DataSource<any> {\n  _filterChange = new BehaviorSubject('');\n  get filter(): string { return this._filterChange.value; }\n  set filter(filter: string) { this._filterChange.next(filter); }\n\n  constructor(private _exampleDatabase: ExampleDatabase) {\n    super();\n  }\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<UserData[]> {\n    const displayDataChanges = [\n      this._exampleDatabase.dataChange,\n      this._filterChange,\n    ];\n\n    return observableMerge(...displayDataChanges).pipe(map(() => {\n      return this._exampleDatabase.data.slice().filter((item: UserData) => {\n        let searchStr = (item.name + item.color).toLowerCase();\n        return searchStr.indexOf(this.filter.toLowerCase()) != -1;\n      });\n    }));\n  }\n\n  disconnect() {}\n}","module.exports = \"\\n<div fxLayout=\\\"column\\\"  class=\\\"components-container-gt-xs\\\"  [ngClass.xs]=\\\"'components-container-xs'\\\"  fxLayoutGap=\\\"20px\\\">\\n\\n\\t<div fxFlex class=\\\"table-component-holder mat-elevation-z4\\\">\\n\\t\\t<mat-toolbar class=\\\"table-header\\\">\\n\\t\\t\\t<h1 class=\\\"mat-headline center-align\\\" >Fixed Table</h1>\\n\\t\\t</mat-toolbar>\\n\\t\\t<div class=\\\"table-container\\\">\\n\\t\\t\\t<mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n\\t\\t\\t\\t<!--- Note that these columns can be defined in any order.\\n\\t\\t\\t\\tThe actual rendered columns are set as a property on the row definition\\\" -->\\n\\n\\t\\t\\t\\t<!-- ID Column -->\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"userId\\\">\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </mat-cell>\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t<!-- Progress Column -->\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"progress\\\">\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef> Progress </mat-header-cell>\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let row\\\"> {{row.progress}}% </mat-cell>\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t<!-- Name Column -->\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"userName\\\">\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </mat-cell>\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t<!-- Color Column -->\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"color\\\">\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef> Color </mat-header-cell>\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\"> {{row.color}} </mat-cell>\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t<mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n\\t\\t\\t\\t<mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n\\t\\t\\t\\t\\n\\t\\t\\t</mat-table>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"","module.exports = \".table-container {\\n  position: relative;\\n  margin-top: 50px; }\\n\\n.table-container .mat-table {\\n  max-height: calc(100vh - 200px);\\n  overflow-y: auto; }\\n\\n.table-container .mat-table .mat-header-row {\\n  position: absolute;\\n  top: -50px;\\n  left: 0px;\\n  right: 18px;\\n  background: #fff; }\\n\\n.table-header {\\n  background-color: #327ebd;\\n  color: white;\\n  padding: 0 5px; }\\n\\n.table-container {\\n  padding: 5px 15px 15px 15px; }\\n\\n.table-component-holder {\\n  border: 1px solid #327ebd;\\n  background-color: white; }\\n\"","import { Component, OnInit , ElementRef, ViewChild} from '@angular/core';\nimport { ExampleDatabase, ExampleDataSource } from './helpers.data';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-fixed-table',\n  templateUrl: './fixed-table.component.html',\n  styleUrls: ['./fixed-table.component.scss']\n})\nexport class FixedTableComponent implements OnInit {\n\tpublic displayedColumns = ['userId', 'userName', 'progress', 'color'];\n\tpublic exampleDatabase = new ExampleDatabase();\n\tpublic dataSource: ExampleDataSource | null;\n  \tpublic showFilterTableCode;\n  \tconstructor() { }\n\n  \tngOnInit() {\n  \t\tthis.dataSource = new ExampleDataSource(this.exampleDatabase);\n    }\n\n}\n","\nimport {merge as observableMerge,  BehaviorSubject ,  Observable } from 'rxjs';\n\nimport {map} from 'rxjs/operators';\nimport { DataSource } from '@angular/cdk/collections';\nimport { UserData } from '../interfaces';\n\n\n\n\n\n\n\n\nconst COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\n  'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\nconst NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n  'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n  'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n\n /** An example database that the data source uses to retrieve data for the table. */\nexport class ExampleDatabase {\n  /** Stream that emits whenever the data has been modified. */\n  dataChange: BehaviorSubject<UserData[]> = new BehaviorSubject<UserData[]>([]);\n  get data(): UserData[] { return this.dataChange.value; }\n\n  constructor() {\n    // Fill up the database with 100 users.\n    for (let i = 0; i < 100; i++) { this.addUser(); }\n  }\n\n  /** Adds a new user to the database. */\n  addUser() {\n    const copiedData = this.data.slice();\n    copiedData.push(this.createNewUser());\n    this.dataChange.next(copiedData);\n  }\n\n  /** Builds and returns a new User. */\n  private createNewUser() {\n    const name =\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n    return {\n      id: (this.data.length + 1).toString(),\n      name: name,\n      progress: Math.round(Math.random() * 100).toString(),\n      color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n    };\n  }\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\n\nexport class ExampleDataSource extends DataSource<any> {\n  _filterChange = new BehaviorSubject('');\n  get filter(): string { return this._filterChange.value; }\n  set filter(filter: string) { this._filterChange.next(filter); }\n\n  constructor(private _exampleDatabase: ExampleDatabase) {\n    super();\n  }\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<UserData[]> {\n    const displayDataChanges = [\n      this._exampleDatabase.dataChange,\n      this._filterChange,\n    ];\n\n    return observableMerge(...displayDataChanges).pipe(map(() => {\n      return this._exampleDatabase.data.slice().filter((item: UserData) => {\n        let searchStr = (item.name + item.color).toLowerCase();\n        return searchStr.indexOf(this.filter.toLowerCase()) != -1;\n      });\n    }));\n  }\n\n  disconnect() {}\n}\n","export const ResponsiveTableHelpers = {\n  header : [\n        {\n            name:'ID',\n            key:'id',\n            order:'asc'\n        },\n        {\n            name:'Name',\n            key:'name',\n            order:'asc'\n        },\n        {\n            name:'Progress',\n            key:'progress',\n            order:'asc'\n        },\n        {\n            name:'Color',\n            key:'color',\n            order:'asc'\n        }\n    ],\n    rows : [{\n        id: \"1\",\n        name: \"Isla A.\",\n        progress: \"0\",\n        color: \"aqua\"\n    },{\n        id: \"2\",\n        name: \"Arthur C.\",\n        progress: \"56\",\n        color: \"blue\"\n    },{\n        id: \"3\",\n        name: \"Theodore T.\",\n        progress: \"67\",\n        color: \"black\"\n    }, {\n        id: \"4\",\n        name: \"Amelia O.\",\n        progress: \"73\",\n        color: \"black\"\n    },{\n        id: \"5\",\n        name: \"Mia T.\",\n        progress: \"99\",\n        color: \"red\"\n    },{\n        id: \"6\",\n        name: \"Maia A.\",\n        progress: \"6\",\n        color: \"red\"\n    },{\n        id: \"7\",\n        name: \"Isabella A.\",\n        progress: \"31\",\n        color: \"black\"\n    },{\n        id: \"8\",\n        name: \"Asher O.\",\n        progress: \"35\",\n        color: \"red\"\n    },{\n        id: \"9\",\n        name: \"Atticus V.\",\n        progress: \"56\",\n        color: \"purple\"\n    },{\n        id: \"10\",\n        name: \"Arthur I.\",\n        progress: \"54\",\n        color: \"purple\"\n    },{\n        id: \"11\",\n        name: \"Asher A.\",\n        progress: \"77\",\n        color: \"purple\"\n    }, {\n        id: \"12\",\n        name: \"Arthur T.\",\n        progress: \"48\",\n        color: \"green\"\n    },{\n        id: \"13\",\n        name: \"Levi I.\",\n        progress: \"12\",\n        color: \"purple\"\n    },{\n        id: \"14\",\n        name: \"Thomas M.\",\n        progress: \"16\",\n        color: \"green\"\n    },{\n        id: \"15\",\n        name: \"Jasper C.\",\n        progress: \"7\",\n        color: \"orange\"\n    },{\n        id: \"16\",\n        name: \"Asher A.\",\n        progress: \"98\",\n        color: \"yellow\"\n    },{\n        id: \"17\",\n        name: \"Isla O.\",\n        progress: \"27\",\n        color: \"olive\"\n    },{\n        id: \"18\",\n        name: \"Atticus M.\",\n        progress: \"17\",\n        color: \"teal\"\n    },{\n        id: \"19\",\n        name: \"Asher A.\",\n        progress: \"22\",\n        color: \"olive\"\n    },{\n        id: \"20\",\n        name: \"Violet T.\",\n        progress: \"29\",\n        color: \"black\"\n    },{\n        id: \"21\",\n        name: \"Amelia M.\",\n        progress: \"70\",\n        color: \"black\"\n    },{\n        id: \"22\",\n        name: \"Atticus A.\",\n        progress: \"61\",\n        color: \"orange\"\n    },{\n        id: \"23\",\n        name: \"Cora A.\",\n        progress: \"48\",\n        color: \"olive\"\n    },{\n        id: \"24\",\n        name: \"Asher M.\",\n        progress: \"94\",\n        color: \"blue\"\n    },{\n        id: \"25\",\n        name: \"Cora T.\",\n        progress: \"35\",\n        color: \"navy\"\n    },{\n        id: \"26\",\n        name: \"Theodore O.\",\n        progress: \"58\",\n        color: \"aqua\"\n    },{\n        id: \"27\",\n        name: \"Atticus A.\",\n        progress: \"12\",\n        color: \"yellow\"\n    },{\n        id: \"28\",\n        name: \"Oliver J.\",\n        progress: \"25\",\n        color: \"black\"\n    },{\n        id: \"29\",\n        name: \"Jack I.\",\n        progress: \"14\",\n        color: \"green\"\n    },{\n        id: \"30\",\n        name: \"Jasper C.\",\n        progress: \"27\",\n        color: \"aqua\"\n    },{\n        id: \"31\",\n        name: \"Levi C.\",\n        progress: \"16\",\n        color: \"navy\"\n    },{\n        id: \"32\",\n        name: \"Olivia V.\",\n        progress: \"45\",\n        color: \"fuchsia\"\n    },{\n        id: \"33\",\n        name: \"Isabella V.\",\n        progress: \"31\",\n        color: \"orange\"\n    }, {\n        id: \"34\",\n        name: \"Jasper J.\",\n        progress: \"21\",\n        color: \"yellow\"\n    }, {\n        id: \"35\",\n        name: \"Atticus E.\",\n        progress: \"44\",\n        color: \"navy\"\n    },{\n        id: \"36\",\n        name: \"Isabella M.\",\n        progress: \"21\",\n        color: \"aqua\"\n    },{\n        id: \"37\",\n        name: \"Jasper T.\",\n        progress: \"7\",\n        color: \"orange\"\n    }, {\n        id: \"38\",\n        name: \"Theodore A.\",\n        progress: \"97\",\n        color: \"aqua\"\n    }, {\n        id: \"39\",\n        name: \"Amelia O.\",\n        progress: \"6\",\n        color: \"aqua\"\n    }, {\n        id: \"40\",\n        name: \"Mia J.\",\n        progress: \"30\",\n        color: \"blue\"\n    }, {\n        id: \"41\",\n        name: \"Theodore J.\",\n        progress: \"87\",\n        color: \"maroon\"\n    }, {\n        id: \"42\",\n        name: \"Levi O.\",\n        progress: \"38\",\n        color: \"black\"\n    }, {\n        id: \"43\",\n        name: \"Thomas T.\",\n        progress: \"60\",\n        color: \"maroon\"\n    }, {\n        id: \"44\",\n        name: \"Olivia T.\",\n        progress: \"80\",\n        color: \"yellow\"\n    }, {\n        id: \"45\",\n        name: \"Violet C.\",\n        progress: \"66\",\n        color: \"olive\"\n    }, {\n        id: \"46\",\n        name: \"Elizabeth I.\",\n        progress: \"4\",\n        color: \"green\"\n    },{\n        id: \"47\",\n        name: \"Olivia T.\",\n        progress: \"41\",\n        color: \"yellow\"\n    }, {\n        id: \"48\",\n        name: \"Amelia A.\",\n        progress: \"75\",\n        color: \"blue\"\n    },{\n        id: \"49\",\n        name: \"Isla A.\",\n        progress: \"65\",\n        color: \"aqua\"\n    }, {\n        id: \"50\",\n        name: \"Oliver O.\",\n        progress: \"29\",\n        color: \"fuchsia\"\n    }, {\n        id: \"51\",\n        name: \"Levi V.\",\n        progress: \"10\",\n        color: \"blue\"\n    }, {\n        id: \"52\",\n        name: \"Asher V.\",\n        progress: \"84\",\n        color: \"teal\"\n    }, {\n        id: \"53\",\n        name: \"Isla T.\",\n        progress: \"75\",\n        color: \"fuchsia\"\n    },{ id: \"54\",\n        name: \"Arthur C.\",\n        progress: \"70\",\n        color: \"teal\"\n    }, {\n        id: \"55\",\n        name: \"Isabella I.\",\n        progress: \"64\",\n        color: \"teal\"\n    },{\n        id: \"56\",\n        name: \"Mia A.\",\n        progress: \"37\",\n        color: \"red\"\n    }, {\n        id: \"57\",\n        name: \"Mia T.\",\n        progress: \"38\",\n        color: \"olive\"\n    }, {\n        id: \"58\",\n        name: \"Arthur J.\",\n        progress: \"52\",\n        color: \"black\"\n    }, {\n        id: \"59\",\n        name: \"Isla A.\",\n        progress: \"61\",\n        color: \"blue\"\n    }, {\n        id: \"60\",\n        name: \"Theodore J.\",\n        progress: \"63\",\n        color: \"green\"\n    }, {\n        id: \"61\",\n        name: \"Atticus O.\",\n        progress: \"4\",\n        color: \"olive\"\n    }, {\n        id: \"62\",\n        name: \"Maia E.\",\n        progress: \"61\",\n        color: \"olive\"\n    }, {\n        id: \"63\",\n        name: \"Mia T.\",\n        progress: \"52\",\n        color: \"olive\"\n    }, {\n        id: \"64\",\n        name: \"Levi I.\",\n        progress: \"51\",\n        color: \"navy\"\n    }, {\n        id: \"65\",\n        name: \"Amelia C.\",\n        progress: \"34\",\n        color: \"green\"\n    }, {\n        id: \"66\",\n        name: \"Olivia A.\",\n        progress: \"48\",\n        color: \"maroon\"\n    }, {\n        id: \"67\",\n        name: \"Charlotte J.\",\n        progress: \"95\",\n        color: \"green\"\n    }, {\n        id: \"68\",\n        name: \"Jasper I.\",\n        progress: \"36\",\n        color: \"blue\"\n    }, {\n        id: \"69\",\n        name: \"Isla J.\",\n        progress: \"81\",\n        color: \"fuchsia\"\n    }, {\n        id: \"70\",\n        name: \"Jack A.\",\n        progress: \"57\",\n        color: \"aqua\"\n    }, {\n        id: \"71\",\n        name: \"Theodore C.\",\n        progress: \"92\",\n        color: \"red\"\n    }, {\n        id: \"72\",\n        name: \"Arthur V.\",\n        progress: \"41\",\n        color: \"green\"\n    }, {\n        id: \"73\",\n        name: \"Isabella O.\",\n        progress: \"98\",\n        color: \"maroon\"\n    }, {\n        id: \"74\",\n        name: \"Atticus J.\",\n        progress: \"94\",\n        color: \"blue\"\n    }, {\n        id: \"75\",\n        name: \"Maia V.\",\n        progress: \"93\",\n        color: \"orange\"\n    }, {\n        id: \"76\",\n        name: \"Thomas O.\",\n        progress: \"87\",\n        color: \"aqua\"\n    }, {\n        id: \"77\",\n        name: \"Asher J.\",\n        progress: \"0\",\n        color: \"yellow\"\n    },{\n        id: \"78\",\n        name: \"Mia C.\",\n        progress: \"21\",\n        color: \"gray\"\n    }, {\n        id: \"79\",\n        name: \"Isla T.\",\n        progress: \"36\",\n        color: \"teal\"\n    }, {\n        id: \"80\",\n        name: \"Cora A.\",\n        progress: \"23\",\n        color: \"orange\"\n    }, {\n        id: \"81\",\n        name: \"Jasper T.\",\n        progress: \"41\",\n        color: \"navy\"\n    }, {\n        id: \"82\",\n        name: \"Theodore I.\",\n        progress: \"6\",\n        color: \"yellow\"\n    }, {\n        id: \"83\",\n        name: \"Oliver O.\",\n        progress: \"87\",\n        color: \"red\"\n    }, {\n        id: \"84\",\n        name: \"Asher O.\",\n        progress: \"2\",\n        color: \"blue\"\n    }, {\n        id: \"85\",\n        name: \"Maia C.\",\n        progress: \"2\",\n        color: \"purple\"\n    }, {\n        id: \"86\",\n        name: \"Olivia A.\",\n        progress: \"4\",\n        color: \"teal\"\n    },{\n        id: \"87\",\n        name: \"Jasper E.\",\n        progress: \"21\",\n        color: \"fuchsia\"\n    }, {\n        id: \"88\",\n        name: \"Amelia I.\",\n        progress: \"40\",\n        color: \"teal\"\n    }, {\n        id: \"89\",\n        name: \"Jack O.\",\n        progress: \"4\",\n        color: \"green\"\n    }, {\n        id: \"90\",\n        name: \"Asher C.\",\n        progress: \"22\",\n        color: \"black\"\n    }, {\n        id: \"91\",\n        name: \"Oliver A.\",\n        progress: \"75\",\n        color: \"teal\"\n    }, {\n        id: \"92\",\n        name: \"Mia J.\",\n        progress: \"10\",\n        color: \"red\"\n    }, {\n        id: \"93\",\n        name: \"Jasper A.\",\n        progress: \"92\",\n        color: \"yellow\"\n    }, {\n        id: \"94\",\n        name: \"Atticus I.\",\n        progress: \"1\",\n        color: \"navy\"\n    }, {\n        id: \"95\",\n        name: \"Jasper I.\",\n        progress: \"46\",\n        color: \"red\"\n    }, {\n        id: \"96\",\n        name: \"Violet I.\",\n        progress: \"85\",\n        color: \"gray\"\n    }, {\n        id: \"97\",\n        name: \"Olivia A.\",\n        progress: \"33\",\n        color: \"lime\"\n    }, {\n        id: \"98\",\n        name: \"Atticus C.\",\n        progress: \"24\",\n        color: \"lime\"\n    }, {\n        id: \"99\",\n        name: \"Asher V.\",\n        progress: \"37\",\n        color: \"aqua\"\n    }, {\n        id: \"100\",\n        name: \"Isabella C.\",\n        progress: \"10\",\n        color: \"black\"\n    }]\n}\n\n/** Constants used to fill up our data base. */\n","module.exports = \"\\n<div fxLayout=\\\"column\\\"  class=\\\"components-container-gt-xs\\\"  [ngClass.xs]=\\\"'components-container-xs'\\\"  fxLayoutGap=\\\"20px\\\">\\n\\n\\t<div fxFlex class=\\\"table-component-holder mat-elevation-z4\\\">\\n\\t\\t<mat-toolbar class=\\\"table-header\\\">\\n\\t\\t\\t<h1 class=\\\"mat-headline center-align\\\" >Responsive Tables</h1>\\n\\t\\t</mat-toolbar>\\n\\t\\t<div class=\\\"table-container\\\">\\n\\t\\t\\n\\t\\t<table  matSort (matSortChange)=\\\"sortData($event)\\\">\\n\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t<th mat-sort-header=\\\"{{th.key}}\\\" scope=\\\"col\\\" *ngFor=\\\"let th of helpers?.header\\\">{{th.name}}</th>\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let row of rows let i=index\\\" >\\n\\t\\t\\t\\t\\t\\t\\t<td [attr.data-label]=\\\"th.name\\\" *ngFor=\\\"let th of helpers?.header\\\" >\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"th.key!='action'\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{row[th.key]}}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-chip  (click)=\\\"findDuplicates(row)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tselected=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcolor=\\\"warn\\\"  matTooltip=\\\"{{row['duplicate_applications'].length}} duplicate entries\\\" matTooltipPosition=\\\"right\\\" *ngIf=\\\"th.key=='applicationNumber' && row['duplicate_applications'] != 'undefined' && row['duplicate_applications'] && row['duplicate_applications'].length > 0\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{row['duplicate_applications'].length }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-chip>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n          \\n\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t<tr *ngIf=\\\"rows?.length==0 && status==false\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<td [colSpan]=\\\"header.length\\\" style=\\\"text-align: center;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tNo records found\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t<thead *matHeaderRowDef=\\\"displayedColumns\\\"></thead>\\n\\t\\t\\t\\t\\t<tr *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t<mat-paginator [length]=\\\"pageLength\\\"\\n\\t\\t              [pageSize]=\\\"pageSize\\\"\\n\\t\\t              [pageSizeOptions]=\\\"[1, 5, 10, 25, 100, 150, 200]\\\"  (page)=\\\"next($event)\\\">\\n\\t\\t\\t\\t</mat-paginator>\\n\\n\\t</div>\\n\\t</div>\\n</div>\\n\"","module.exports = \".table-header {\\n  background-color: #327ebd;\\n  color: white;\\n  padding: 0 5px; }\\n\\n.table-container {\\n  padding: 5px 15px 15px 15px; }\\n\\n.table-component-holder {\\n  border: 1px solid #327ebd;\\n  background-color: white; }\\n\\ntable {\\n  border: 1px solid #ccc;\\n  border-collapse: collapse;\\n  margin: 0;\\n  padding: 0;\\n  width: 100%;\\n  table-layout: fixed; }\\n\\ntable caption {\\n  font-size: 1.5em;\\n  margin: .5em 0 .75em;\\n  font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif; }\\n\\ntable tr {\\n  background: #f8f8f8;\\n  border: 1px solid #ddd;\\n  padding: .35em; }\\n\\ntable tr:nth-child(odd) td {\\n  font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif; }\\n\\ntable tr:nth-child(even) td {\\n  background: rgba(145, 151, 187, 0.34);\\n  font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif; }\\n\\n/deep/ .mat-sort-header-container {\\n  justify-content: center; }\\n\\ntable th,\\ntable td {\\n  padding: .625em;\\n  text-align: center;\\n  font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif; }\\n\\ntable th {\\n  background: #cfcfcf;\\n  font-size: .85em;\\n  letter-spacing: .1em;\\n  text-transform: uppercase; }\\n\\n@media screen and (max-width: 600px) {\\n  table {\\n    border: 0; }\\n  table caption {\\n    font-size: 1.3em; }\\n  table thead {\\n    border: none;\\n    clip: rect(0 0 0 0);\\n    height: 1px;\\n    margin: -1px;\\n    overflow: hidden;\\n    padding: 0;\\n    position: absolute;\\n    width: 1px; }\\n  table tr {\\n    border-bottom: 3px solid #ddd;\\n    display: block;\\n    margin-bottom: .625em; }\\n  table td {\\n    border-bottom: 1px solid #ddd;\\n    display: block;\\n    font-size: .8em;\\n    text-align: right; }\\n  table td:before {\\n    /*\\n        * aria-label has no advantage, it won't be read inside a table\\n        content: attr(aria-label);\\n        */\\n    content: attr(data-label);\\n    float: left;\\n    font-weight: bold;\\n    text-transform: uppercase; }\\n  table td:last-child {\\n    border-bottom: 0; } }\\n\\nmat-button-toggle-group {\\n  cursor: pointer; }\\n\\n::ng-deep .mat-sort-header-container {\\n  justify-content: center; }\\n\\n/* Structure */\\n\\n.example-container {\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 300px; }\\n\\n.example-header {\\n  min-height: 64px;\\n  display: flex;\\n  align-items: center;\\n  padding-left: 24px;\\n  font-size: 20px; }\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px; }\\n\\n.widgetHolder {\\n  margin: 0 auto; }\\n\\n.widgetHolder .widgetHolder-content {\\n    padding: 20px; }\\n\"","import { Component, OnInit, ViewEncapsulation, Input,Output,EventEmitter, ViewChild } from '@angular/core';\nimport { ResponsiveTableHelpers } from './helpers.data';\nimport { MatPaginator } from '@angular/material';\n\n@Component({\n  selector: 'cdk-responsive-table',\n  templateUrl: './responsive-table.component.html',\n  styleUrls: ['./responsive-table.component.scss']\n})\nexport class ResponsiveTableComponent implements OnInit {\n\n  \tdisplayedColumns = ['userId', 'userName', 'progress', 'color'];\n\trows: Array<any> = [];\n    showResponsiveTableCode;\n\n\t@ViewChild(MatPaginator) paginator1: MatPaginator;\n    pageLength = 0;\n    pageSize = 15;\n    helpers = ResponsiveTableHelpers;\n    @Input() status;\n    @Input() actionStatus;\n    @Output() edit = new EventEmitter();\n    @Output() delete = new EventEmitter();\n    @Output() view = new EventEmitter();\n    @Output() page = new EventEmitter();\n    @Output() sort = new EventEmitter();\n    @Output() dup = new EventEmitter();\n  \tconstructor() {\n   \t}\n\n    ngOnInit() {\n        this.getRows();\n    }\n  \tnext(event) {\n        this.rows = [];\n    \tfor (var i= 1 * event.pageIndex * event.pageSize; i< event.pageSize+event.pageIndex*event.pageSize ;i++) {\n            this.rows = [...this.rows,this.helpers.rows[i]];\n        }\n    }\n    getRows() {\n        for (var i=0;i<this.pageSize;i++) {\n            this.rows = [...this.rows,this.helpers.rows[i]];\n        }\n        this.pageLength = this.helpers.rows.length;\n    }\n    sortData(val){\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { TablesRouterModule } from './tables.router';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule,\n         MatSortModule,\n         MatCheckboxModule,\n         MatTooltipModule,\n         MatChipsModule,\n         MatButtonToggleModule } from '@angular/material';\n\n\nimport * as hljs from 'highlight.js';\nimport { HighlightJsModule, HIGHLIGHT_JS } from 'angular-highlight-js';\nimport * as hljsTypescript from 'highlight.js/lib/languages/typescript';\nimport { FilterTableComponent } from './filter-table/filter-table.component';\nimport { FeatureTableComponent } from './feature-table/feature-table.component';\nimport { ResponsiveTableComponent } from './responsive-table/responsive-table.component';\nimport { FixedTableComponent } from './fixed-table/fixed-table.component';\n\n\nexport function highlightJsFactory(): any {\n  hljs.registerLanguage('typescript', hljsTypescript);\n  return hljs;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatListModule,\n    MatStepperModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatExpansionModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatChipsModule,\n    MatButtonToggleModule,\n    HighlightJsModule.forRoot({\n      provide: HIGHLIGHT_JS,\n      useFactory: highlightJsFactory\n    }),\n    TablesRouterModule\n  ],\n  declarations: [\n   FilterTableComponent,\n   FeatureTableComponent,\n   ResponsiveTableComponent,\n   FixedTableComponent],\n\n  exports: [\n    ]\n      \n})\nexport class TablesModule { }\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FixedTableComponent } from './fixed-table/fixed-table.component';\nimport { FeatureTableComponent } from './feature-table/feature-table.component';\nimport { ResponsiveTableComponent } from './responsive-table/responsive-table.component';\n\nconst materialWidgetRoutes: Routes = [\n  \t{ path: 'fixed', component: FixedTableComponent , data: { animation: 'fixed' }},\n  \t{ path: 'featured', component: FeatureTableComponent ,data: { animation: 'featured' }},\n  \t{ path: 'responsive', component: ResponsiveTableComponent ,data: { animation: 'responsive' }}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(materialWidgetRoutes)\n  \t],\n  exports: [\n    RouterModule\n  ]\n})\nexport class TablesRouterModule {}"],"sourceRoot":""}